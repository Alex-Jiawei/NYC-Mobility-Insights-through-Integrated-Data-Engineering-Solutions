<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='34.70.156.233' inline='true' name='federated.0pp6k9x0g4rfig1f7mef01kwfs34' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.70.156.233' name='googlecloudsql.1k5amwq1prcx191agcmmr1in7hd6'>
            <connection class='googlecloudsql' dbname='dep-project' odbc-native-protocol='' one-time-sql='' port='3306' server='34.70.156.233' source-charset='' username='root' />
          </named-connection>
        </named-connections>
      </connection>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph />
    </datasource>
    <datasource caption='weather+ (dep-project)' inline='true' name='federated.1kpbq700qvife118ejv5q10f6usf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='34.70.156.233' name='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8'>
            <connection class='googlecloudsql' dbname='dep-project' odbc-native-protocol='' one-time-sql='' port='3306' server='34.70.156.233' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='weather' table='[weather]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='time' table='[time]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='bike_rides' table='[bike_rides]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='bike_stations' table='[bike_stations]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_hourly_rides' table='[subway_hourly_rides]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_fare_category' table='[subway_fare_category]' type='table' />
          <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_stations' table='[subway_stations]' type='table' />
        </relation>
        <cols>
          <map key='[borough]' value='[subway_hourly_rides].[borough]' />
          <map key='[day]' value='[time].[day]' />
          <map key='[day_of_week]' value='[time].[day_of_week]' />
          <map key='[duration_min]' value='[bike_rides].[duration_min]' />
          <map key='[end_station_id]' value='[bike_rides].[end_station_id]' />
          <map key='[ended_at]' value='[bike_rides].[ended_at]' />
          <map key='[fare_category_id]' value='[subway_fare_category].[fare_category_id]' />
          <map key='[fare_class_category]' value='[subway_fare_category].[fare_class_category]' />
          <map key='[fare_class_category_id]' value='[subway_hourly_rides].[fare_class_category_id]' />
          <map key='[hour]' value='[time].[hour]' />
          <map key='[latitude (bike_stations)]' value='[bike_stations].[latitude]' />
          <map key='[latitude]' value='[subway_stations].[latitude]' />
          <map key='[longitude (bike_stations)]' value='[bike_stations].[longitude]' />
          <map key='[longitude]' value='[subway_stations].[longitude]' />
          <map key='[month]' value='[time].[month]' />
          <map key='[payment_method]' value='[subway_hourly_rides].[payment_method]' />
          <map key='[precipitation]' value='[weather].[precipitation]' />
          <map key='[ride_id]' value='[bike_rides].[ride_id]' />
          <map key='[ridership]' value='[subway_hourly_rides].[ridership]' />
          <map key='[start_station_id]' value='[bike_rides].[start_station_id]' />
          <map key='[started_at]' value='[bike_rides].[started_at]' />
          <map key='[station_complex]' value='[subway_stations].[station_complex]' />
          <map key='[station_complex_id (subway_stations)]' value='[subway_stations].[station_complex_id]' />
          <map key='[station_complex_id]' value='[subway_hourly_rides].[station_complex_id]' />
          <map key='[station_id]' value='[bike_stations].[station_id]' />
          <map key='[station_name]' value='[bike_stations].[station_name]' />
          <map key='[temperature]' value='[weather].[temperature]' />
          <map key='[time_id (bike_rides)]' value='[bike_rides].[time_id]' />
          <map key='[time_id (subway_hourly_rides)]' value='[subway_hourly_rides].[time_id]' />
          <map key='[time_id (time)]' value='[time].[time_id]' />
          <map key='[time_id]' value='[weather].[time_id]' />
          <map key='[transfers]' value='[subway_hourly_rides].[transfers]' />
          <map key='[transit_mode]' value='[subway_hourly_rides].[transit_mode]' />
          <map key='[wind_speed]' value='[weather].[wind_speed]' />
          <map key='[year]' value='[time].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>time_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_id]</local-name>
            <parent-name>[weather]</parent-name>
            <remote-alias>time_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>4</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[weather]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed</remote-name>
            <remote-type>4</remote-type>
            <local-name>[wind_speed]</local-name>
            <parent-name>[weather]</parent-name>
            <remote-alias>wind_speed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>4</remote-type>
            <local-name>[precipitation]</local-name>
            <parent-name>[weather]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_id (time)]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>time_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[time]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ride_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ride_id]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>ride_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>started_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[started_at]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>started_at</remote-alias>
            <ordinal>14</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ended_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ended_at]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>ended_at</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[start_station_id]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>start_station_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[end_station_id]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>end_station_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_min</remote-name>
            <remote-type>4</remote-type>
            <local-name>[duration_min]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>duration_min</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_id (bike_rides)]</local-name>
            <parent-name>[bike_rides]</parent-name>
            <remote-alias>time_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[station_id]</local-name>
            <parent-name>[bike_stations]</parent-name>
            <remote-alias>station_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[station_name]</local-name>
            <parent-name>[bike_stations]</parent-name>
            <remote-alias>station_name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude (bike_stations)]</local-name>
            <parent-name>[bike_stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude (bike_stations)]</local-name>
            <parent-name>[bike_stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_id (subway_hourly_rides)]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>time_id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transit_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[transit_mode]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>transit_mode</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_complex_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[station_complex_id]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>station_complex_id</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>borough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[borough]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>borough</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_method</remote-name>
            <remote-type>130</remote-type>
            <local-name>[payment_method]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>payment_method</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_class_category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[fare_class_category_id]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>fare_class_category_id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ridership</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ridership]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>ridership</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transfers</remote-name>
            <remote-type>3</remote-type>
            <local-name>[transfers]</local-name>
            <parent-name>[subway_hourly_rides]</parent-name>
            <remote-alias>transfers</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_category_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[fare_category_id]</local-name>
            <parent-name>[subway_fare_category]</parent-name>
            <remote-alias>fare_category_id</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_class_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_class_category]</local-name>
            <parent-name>[subway_fare_category]</parent-name>
            <remote-alias>fare_class_category</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_complex_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[station_complex_id (subway_stations)]</local-name>
            <parent-name>[subway_stations]</parent-name>
            <remote-alias>station_complex_id</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_complex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[station_complex]</local-name>
            <parent-name>[subway_stations]</parent-name>
            <remote-alias>station_complex</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[subway_stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[subway_stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
      <column caption='bike_stations' datatype='table' name='[__tableau_internal_object_id__].[bike_stations_E8FA3984B886486CB9BC5684C169CED1]' role='measure' type='quantitative' />
      <column caption='subway_fare_category' datatype='table' name='[__tableau_internal_object_id__].[subway_fare_category_387963C43B1B4FBFA0E64E0A3BFE1B8B]' role='measure' type='quantitative' />
      <column caption='subway_hourly_rides' datatype='table' name='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' role='measure' type='quantitative' />
      <column caption='subway_stations' datatype='table' name='[__tableau_internal_object_id__].[subway_stations_2BD346033E044873BB0379A3C3FABC23]' role='measure' type='quantitative' />
      <column caption='time' datatype='table' name='[__tableau_internal_object_id__].[time_97BEC70BF69B4D9BAF65DB5EFD6EC2AB]' role='measure' type='quantitative' />
      <column caption='weather' datatype='table' name='[__tableau_internal_object_id__].[weather_FD3835BFD09F4DEBB3ACA961C94B4EA9]' role='measure' type='quantitative' />
      <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
      <column caption='Duration Min' datatype='real' name='[duration_min]' role='measure' type='quantitative' />
      <column caption='End Station Id' datatype='string' name='[end_station_id]' role='dimension' type='nominal' />
      <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Fare Category Id' datatype='integer' name='[fare_category_id]' role='dimension' type='ordinal' />
      <column caption='Fare Class Category' datatype='string' name='[fare_class_category]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Fare Class Category Id' datatype='integer' name='[fare_class_category_id]' role='dimension' type='ordinal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude (Bike Stations)' datatype='real' name='[latitude (bike_stations)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude (Bike Stations)' datatype='real' name='[longitude (bike_stations)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Payment Method' datatype='string' name='[payment_method]' role='dimension' type='nominal' />
      <column caption='Precipitation' datatype='real' name='[precipitation]' role='measure' type='quantitative' />
      <column caption='Ride Id' datatype='string' name='[ride_id]' role='dimension' type='nominal' />
      <column caption='Ridership' datatype='integer' name='[ridership]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='string' name='[start_station_id]' role='dimension' type='nominal' />
      <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
      <column caption='Station Complex' datatype='string' name='[station_complex]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Station Complex Id (Subway Stations)' datatype='integer' name='[station_complex_id (subway_stations)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Station Complex Id' datatype='integer' name='[station_complex_id]' role='dimension' type='ordinal' />
      <column caption='Station Id' datatype='string' name='[station_id]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Time Id (Bike Rides)' datatype='string' name='[time_id (bike_rides)]' role='dimension' type='nominal' />
      <column caption='Time Id (Subway Hourly Rides)' datatype='string' name='[time_id (subway_hourly_rides)]' role='dimension' type='nominal' />
      <column caption='Time Id (Time)' datatype='string' name='[time_id (time)]' role='dimension' type='nominal' />
      <column caption='Time Id' datatype='string' name='[time_id]' role='dimension' type='nominal' />
      <column caption='Transfers' datatype='integer' name='[transfers]' role='measure' type='quantitative' />
      <column caption='Transit Mode' datatype='string' name='[transit_mode]' role='dimension' type='nominal' />
      <column caption='Wind Speed' datatype='real' name='[wind_speed]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ridership]' derivation='Sum' name='[sum:ridership:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]&quot;</bucket>
            </map>
            <map to='#da9a63'>
              <bucket>&quot;[federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='bike_rides' id='bike_rides_56951E42E78843B0B1A70B28A23FF8D2'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='bike_rides' table='[bike_rides]' type='table' />
            </properties>
          </object>
          <object caption='bike_stations' id='bike_stations_E8FA3984B886486CB9BC5684C169CED1'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='bike_stations' table='[bike_stations]' type='table' />
            </properties>
          </object>
          <object caption='subway_fare_category' id='subway_fare_category_387963C43B1B4FBFA0E64E0A3BFE1B8B'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_fare_category' table='[subway_fare_category]' type='table' />
            </properties>
          </object>
          <object caption='subway_hourly_rides' id='subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_hourly_rides' table='[subway_hourly_rides]' type='table' />
            </properties>
          </object>
          <object caption='subway_stations' id='subway_stations_2BD346033E044873BB0379A3C3FABC23'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='subway_stations' table='[subway_stations]' type='table' />
            </properties>
          </object>
          <object caption='time' id='time_97BEC70BF69B4D9BAF65DB5EFD6EC2AB'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='time' table='[time]' type='table' />
            </properties>
          </object>
          <object caption='weather' id='weather_FD3835BFD09F4DEBB3ACA961C94B4EA9'>
            <properties context=''>
              <relation connection='googlecloudsql.1o49s7z1jmqyph12bcpdk1a636n8' name='weather' table='[weather]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[time_id (time)]' />
              <expression op='[time_id (bike_rides)]' />
            </expression>
            <first-end-point is-db-set-unique-key='true' object-id='time_97BEC70BF69B4D9BAF65DB5EFD6EC2AB' unique-key='true' />
            <second-end-point object-id='bike_rides_56951E42E78843B0B1A70B28A23FF8D2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[start_station_id]' />
              <expression op='[station_id]' />
            </expression>
            <first-end-point object-id='bike_rides_56951E42E78843B0B1A70B28A23FF8D2' />
            <second-end-point is-db-set-unique-key='true' object-id='bike_stations_E8FA3984B886486CB9BC5684C169CED1' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[fare_class_category_id]' />
              <expression op='[fare_category_id]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A' />
            <second-end-point is-db-set-unique-key='true' object-id='subway_fare_category_387963C43B1B4FBFA0E64E0A3BFE1B8B' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[time_id (time)]' />
              <expression op='[time_id (subway_hourly_rides)]' />
            </expression>
            <first-end-point is-db-set-unique-key='true' object-id='time_97BEC70BF69B4D9BAF65DB5EFD6EC2AB' unique-key='true' />
            <second-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[station_complex_id]' />
              <expression op='[station_complex_id (subway_stations)]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' object-id='subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A' />
            <second-end-point is-db-set-unique-key='true' object-id='subway_stations_2BD346033E044873BB0379A3C3FABC23' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[time_id]' />
              <expression op='[time_id (time)]' />
            </expression>
            <first-end-point guaranteed-value='true' is-db-set-guaranteed-value='true' is-db-set-unique-key='true' object-id='weather_FD3835BFD09F4DEBB3ACA961C94B4EA9' unique-key='true' />
            <second-end-point is-db-set-unique-key='true' object-id='time_97BEC70BF69B4D9BAF65DB5EFD6EC2AB' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekly ridership pattern</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]' pivot='key' type='quantitative' />
            <column caption='subway_hourly_rides' datatype='table' name='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' role='measure' type='quantitative' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]' included-values='in-range'>
            <min>0</min>
            <max>23</max>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' included-values='in-range-or-null'>
            <min>0</min>
            <max>12</max>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>95.0</max>
          </filter>
          <slices>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1kpbq700qvife118ejv5q10f6usf].[Multiple Values]</rows>
        <cols>([federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk] / [federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{703B1193-CE88-4ECA-BE9E-B32C96F87F4A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MTA citi bike usage on Temperature
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]' pivot='key' type='quantitative' />
            <column caption='subway_hourly_rides' datatype='table' name='[__tableau_internal_object_id__].[subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A]' role='measure' type='quantitative' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]' included-values='in-range'>
            <min>0</min>
            <max>23</max>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' included-values='in-range'>
            <min>0</min>
            <max>12</max>
          </filter>
          <slices>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</rows>
        <cols>([federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:subway_hourly_rides_B95213E91F73427FBD77D2D5A387FD9A:qk] + [federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk])</cols>
      </table>
      <simple-id uuid='{5A6E6AB4-A402-4078-954E-E15596CD17AC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top MTA Stations&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station_complex]' derivation='None' name='[none:station_complex:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Ridership' datatype='integer' name='[ridership]' role='measure' type='quantitative' />
            <column caption='Station Complex' datatype='string' name='[station_complex]' role='dimension' type='nominal' />
            <column-instance column='[ridership]' derivation='Sum' name='[sum:ridership:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:borough:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;borough&quot;' />
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;Bronx&quot;' />
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;Brooklyn&quot;' />
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;Manhattan&quot;' />
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;Queens&quot;' />
              <groupfilter function='member' level='[none:borough:nk]' member='&quot;Staten Island&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;day_of_week&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Friday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Monday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Saturday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Sunday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Thursday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Tuesday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Wednesday&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' included-values='in-range'>
            <min>0</min>
            <max>12</max>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>95.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_complex:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:borough:nk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_complex:nk]</rows>
        <cols>[federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk]</cols>
      </table>
      <simple-id uuid='{77E1ADE5-4F24-44E7-B315-70EA4D135A19}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ridership by hours&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column caption='Ridership' datatype='integer' name='[ridership]' role='measure' type='quantitative' />
            <column-instance column='[ridership]' derivation='Sum' name='[sum:ridership:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk] + [federated.1kpbq700qvife118ejv5q10f6usf].[sum:ridership:qk])</rows>
        <cols>[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]</cols>
      </table>
      <simple-id uuid='{9A90A2CF-355C-4CD3-A476-7693994940BC}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station_name]' derivation='None' name='[none:station_name:nk]' pivot='key' type='nominal' />
            <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</rows>
        <cols>[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]</cols>
      </table>
      <simple-id uuid='{F4144E4C-0648-43A7-A64E-DFC8C682F521}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Citi-Bike Station&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
          </datasources>
          <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
            <column caption='bike_rides' datatype='table' name='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bike_rides_56951E42E78843B0B1A70B28A23FF8D2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' pivot='key' type='quantitative' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_name]' derivation='None' name='[none:station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Station Name' datatype='string' name='[station_name]' role='dimension' type='nominal' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Friday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Monday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Saturday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Sunday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Thursday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Tuesday&quot;' />
              <groupfilter function='member' level='[none:day_of_week:nk]' member='&quot;Wednesday&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 38 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 39 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 6 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;1 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 202 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 204 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 207 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 215 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;100 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;100 St &amp; Humphreys St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;100 St &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;100 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;102 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;103 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;103 St &amp; Martense Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;104 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;104 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;104 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;107 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;108 St &amp; 39 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 Ave &amp; Prospect Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;11 St &amp; 44 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;111 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;111 St &amp; 49 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;111 St &amp; 53 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;111 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;112 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;114 St &amp; 39 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;12 Ave &amp; 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;12 Ave &amp; W 125 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;16th St &amp; 4th Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;17 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;18 St &amp; 27 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;19 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Av &amp; 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 32 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 39 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 43 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; 44 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 125 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 33 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 38 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 42 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; 48 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;20 Ave &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 Ave &amp; 80 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 Ave &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 21 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 Ave &amp; 83 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 Rd &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;23 St &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 Ave &amp; 87 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 Ave &amp; 92 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;24 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;25 Ave &amp; 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;25 Ave &amp; 85 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;25 Ave &amp; 96 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;26 Ave &amp; 2 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;27 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;29 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;29 St &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; 17 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 109 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 163 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 170 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 174 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 189 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E 81 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; E Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 Ave &amp; Wakeman Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 47 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 70 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 80 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 Ave &amp; 96 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;30 St &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 103 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 57 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 61 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 84 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; 86 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Pl &amp; Hunters Point Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 Rd &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; 21 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;32 Ave &amp; 75 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;32 Ave &amp; 77 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;32 Ave &amp; 81 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;32 Ave &amp; 84 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;33 St &amp; 47 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;33 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 113 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 48 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 71 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 74 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 83 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; 89 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 Ave &amp; Junction Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 St &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;34th Ave &amp; Vernon Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 St &amp; 21 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; 47 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; Hunters Point Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;36 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;37 Ave &amp; 106 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;37 Ave &amp; 113 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;37 Ave &amp; 63 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;38 Ave &amp; 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;38 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;38 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 Ave &amp; 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 Ave &amp; 54 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 Ave &amp; 56 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 Ave &amp; 99 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 Dr &amp; 52 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 St &amp; 47 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 St &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;39 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; 17 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; 26 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; E 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;4 Ave &amp; Shore Road Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;40 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;40 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;41 Ave &amp; 67 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;41 Ave &amp; 77 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;41 Ave &amp; 80 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;41 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;41 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;42 Ave &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;42 Pl &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;42 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 Ave &amp; 111 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 Ave &amp; 40 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 Ave &amp; 42 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 Ave &amp; 47 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;43 St &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 St &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;44 St &amp; Greenpoint Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;45 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;45 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 Ave &amp; Junction Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 Rd &amp; 11 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; 25 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; 28 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; 30 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;46 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 Ave &amp; 104 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 Ave &amp; 109 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 Ave &amp; 48 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;47 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 Ave &amp; 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; Barnett Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;48 St &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;49 Ave &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;49 Ave &amp; 27 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;49 St &amp; 25 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;49 St &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Av &amp; W 139 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; 66 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 135 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 30 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 87 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 Ave &amp; W 131 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;5 St &amp; Market St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;50 Ave &amp; 65 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;50 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;50 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;50 St &amp; Barnett Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;50 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 Ave &amp; 61 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 Ave &amp; Alstyne Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 Ave &amp; Corona Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 Ave &amp; Junction Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 Ave &amp; Van Loon St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 St &amp; Hobart St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;51 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;52 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;52 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 Ave &amp; 62 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 Ave &amp; 94 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 St &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;53 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;54 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 Ave &amp; 90 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 Ave &amp; 97 Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 Ave &amp; Center Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 Dr &amp; Maurice Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;55 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;56 Ave &amp; 92 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;56 Ave &amp; Junction Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;56 Dr &amp; 59 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;56 Dr &amp; 61 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;56 St &amp; Arnold Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 Ave &amp; 98 Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 Rd &amp; 58 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 Rd &amp; 59 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;57 St &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;58 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;58 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;58 St &amp; 56 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;58 St &amp; Pier 4&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;59 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;59 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;59 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;59 St &amp; 59 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; 55 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; 60 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; W 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 Ave &amp; Walker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Ave &amp; Fresh Pond Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Ave &amp; Junction Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Ave &amp; Otis Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Pl &amp; 67 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Pl &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Pl &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 Pl &amp; Linden St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;60 St &amp; 60 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; 39 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; 60 Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; Borden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; Laurel Hill Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; Queens Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;61 St &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;62 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;62 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;62 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;62 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;63 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;63 St &amp; 59 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;63 St &amp; Borden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;64 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;64 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;64 St &amp; 53 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;64 St &amp; Woodbine St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 Ln &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 Pl &amp; 53 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 Pl &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 St &amp; Otto Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;65 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;67 Ave &amp; Fresh Pond Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;67 St &amp; Erik Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;67 St &amp; Ridge Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;69 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;69 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 17 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 20 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 22 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 40 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; 62 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; Park Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave &amp; W 55 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 Ave S &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;71 Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;71 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;71 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;72 St &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;72 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;72 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;72 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;72 St &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;73 St &amp; 25 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;74 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;74 St &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;75 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;75 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;75 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;76 St &amp; 21 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;76 St &amp; 45 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;77 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;77 St &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;78 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;79 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;79 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;79 St &amp; Woodside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 24 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 27 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 38 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 49 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;8 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;81 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;81 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;81 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;82 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;82 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;84 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;85 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;86 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;86 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;87 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;87 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;88 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 18 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 204 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 206 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 219 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 39 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;90 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;90 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;91 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;91 St &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;92 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;92 St &amp; 37 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;92 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;93 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;93 St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;94 St &amp; 57 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;95 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;96 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;97 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;97 St &amp; 57 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;98 St &amp; 25 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;98 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; 32 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; 58 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;99 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Academy St &amp; Nagle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 130 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 132 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 141 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 151 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adams St &amp; Prospect St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albany Ave &amp; Carroll St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albany Ave &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albany Ave &amp; Park Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albany Ave &amp; Winthrop St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albany St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albee Square W &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albemarle Rd &amp; E 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Albemarle Rd &amp; McDonald Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Alexander Ave &amp; E 134 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amory Ct &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 131 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 136 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 152 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 156 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 162 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 180 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 186 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 189 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Anderson Ave &amp; W 164 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Andrew Ave N &amp; Hall of Fame Tce&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Andrews Ave S &amp; W 179 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Anthony Ave &amp; E 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Anthony Ave &amp; E Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Aqueduct Ave &amp; North St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Aqueduct Ave &amp; W 190 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Arthur Ave &amp; E 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Arthur Ave &amp; E Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ash St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ashland Pl &amp; Dekalb Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Audobon Ave &amp; W 179 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Audubon Ave &amp; Fort George Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Audubon Ave &amp; W 192 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ave A &amp; E 11 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ave A &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ave C &amp; E 16 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ave D &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Avenue C &amp; E 18 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Avenue D &amp; E 10 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bailey Ave &amp; Sedgwick Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bailey Ave &amp; W 193 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bailey Ave &amp; W 229 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bailey Ave &amp; W 234 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bailey Ave &amp; W 238 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bainbridge Ave &amp; Bedford Park Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bainbridge Ave &amp; E 193 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bainbridge Ave &amp; E 196 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bainbridge Ave &amp; E 198 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Barry St &amp; Tiffany St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bay St &amp; Court St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Beaver St &amp; Fayette St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Beck St &amp; Leggett Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Albemarle Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Clarkson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Fenimore St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Maple St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bedford Park Blvd &amp; Paul Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Benham St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen Ave &amp; E 152 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Buffalo Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Carlton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Kingston Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Mother Gaston Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Saratoga Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Beverley Rd &amp; E 49 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Beverley Rd &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Beverley Rd &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bleecker St &amp; Crosby St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bleecker St &amp; Forest Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boerum Pl&#9;&amp; Pacific St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boone Ave &amp; E 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Borden Ave &amp; 25 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Borden Ave &amp; Review Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boston Rd &amp; E 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boston Rd &amp; E 178 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boston Rd &amp; Prospect Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Boston Rd &amp; West Farms Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Botanical Sq &amp; Webster Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bradhurst Ave &amp; W 148 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bradley Ave &amp; Greenpoint Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brevoort Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bridge St &amp; Water St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bridge St &amp; York St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; 49 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; 51 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; E 19 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; E 21 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Ellwood St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Furman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Hancock St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Kosciuszko St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Madison St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Morris St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Van Cortlandt Park S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 131 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 133 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 142 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 153 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 155 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 157 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 160 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 168 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 185 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 192 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 220 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 234 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 238 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; W 61 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Broadway\\t&amp; W 48 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bronx Park S &amp; Bryant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bronx Shore Comfort Station&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brook Ave &amp; E 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brook Ave &amp; E 141 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brook Ave &amp; E 148 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brook Ave &amp; E 157 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Dean St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Lefferts Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Prospect Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Snyder Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Ave &amp; Tilden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bruckner Blvd &amp; Bryant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Buchanan Pl &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Buffalo Ave &amp; E New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Buffalo Ave &amp; St Johns Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bulova Ave &amp; Brooklyn Queens Expressway W&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Dekalb Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Forrest St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Furman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Harman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Linden St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; McKibbin St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Bushwick Ave &amp; Stagg St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Butler St &amp; 27 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cabrini Blvd &amp; W 177 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Calyer St &amp; Guernsey St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Calyer St &amp; Jewel St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Calyer St &amp; West St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carlton Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Rochester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Case St &amp; 94 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Catalpa Ave &amp; Woodward Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Caton Ave &amp; Argyle Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Caton Ave &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Caton Ave &amp; E 10 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Caton Ave &amp; E 7 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Caton Ave &amp; St. Pauls Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cauldwell Ave &amp; E 158 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cauldwell Ave &amp; E 161 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cedar Ave &amp; W Fordham Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cedar St &amp; Evergreen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cedar St &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Center Blvd &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Covert St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Decatur St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Himrod St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Melrose St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Starr Street&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Weirfield St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Ave &amp; Woodbine St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park W &amp; W 103 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park W &amp; W 91 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park W &amp; W 97 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Centre St &amp; Seneca Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Charlotte St &amp; Boston Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Chauncey St &amp; Howard Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Chauncey St &amp; Malcolm X Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Chauncey St &amp; Stuyvesant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cherry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Chester Ave &amp; 12 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church Ave &amp; E 42 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church Ave &amp; E 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church Ave &amp; McDonald Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church Ave &amp; Story St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Church St &amp; Worth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Claflin Ave &amp; Reservoir Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clarkson Ave &amp; E 37 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clarkson Ave &amp; E 40 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clarkson Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clarkson Ave &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clarkson Ave &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clay Ave &amp; Claremont Pkwy&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clay Ave &amp; E 173 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton Ave &amp; E Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Cherry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Coffey St &amp; Ferris St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;College Ave &amp; E 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;College Ave &amp; E 170 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Columbus Pl &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Concourse Village East &amp; E 158 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Concourse Village West &amp; E 156 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Congress St &amp; Hicks St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Convent Ave &amp; W 135 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Convent Ave &amp; W 151 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cooper Ave &amp; 65 Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Corona Ave &amp; 102 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Corona Ave &amp; 111 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Corona Ave &amp; 90 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Corona Ave &amp; 92 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Corona Ave &amp; 98 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cortelyou Rd &amp; Albany Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cortelyou Rd &amp; Argyle Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cortelyou Rd &amp; E 19 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cortelyou Rd &amp; E 34 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cortelyou Rd &amp; Stratford Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Court St &amp; State St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Courtlandt Ave &amp; E 149 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Courtlandt Ave &amp; E 157 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent Ave &amp; Belmont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Creston Ave &amp; E 178 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Creston Ave &amp; E 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Ave &amp; Crotona Park N&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Ave &amp; E 179 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Ave &amp; E 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Ave &amp; E Fordham Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Park East &amp; E 173 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Park North &amp; Prospect Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Pkwy &amp; Bronx Park S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crotona Pkwy &amp; Elsmere Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crown St &amp; Rogers Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Crown St &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cypress Ave &amp; George St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cypress Ave &amp; Palmetto St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cypress Ave &amp; St Felix Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Cypress Hills St &amp; Otto Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dahill Rd &amp; 12 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Davidson Ave &amp; W Burnside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Davis St &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dawson St &amp; Intervale Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dean St &amp; Rockaway Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Decatur Ave &amp; Bedford Park Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Decatur Ave &amp; E 197 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Decatur Ave &amp; Oliver Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Decatur St &amp; Saratoga Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Degraw St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;DeKalb Ave &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Delancey St &amp; Eldridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Devoe St &amp; Morgan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 102 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 31 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 43 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 48 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 73 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 76 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 79 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ditmars Blvd &amp; 94 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Division Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dock 72 Way &amp; Market St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dock St &amp; Front St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Driggs Ave &amp; S 2 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Duane St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dwight St &amp; Dikeman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dyckman St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dyckman St &amp; Henshaw St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Dyckman St &amp; Staff St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 1 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 1 St &amp; Bowery&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 10 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 106 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 11 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 117 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 12 St &amp; Ave C&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 128 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 13 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 132 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 133 St &amp; Cypress Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 134 St &amp; Walnut Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 135 St &amp; St Ann&apos;s Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; 5 Av&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; Canal St W&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; Cypress Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; Grand Concourse&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 138 St &amp; Willow Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 14 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 14 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 141 St &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 141 St &amp; St Ann&apos;s Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 142 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 144 St &amp; Brook Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 147 St &amp; Bergen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 149 St &amp; Eagle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 149 St &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 149 St &amp; Morris Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 149 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 150 St &amp; Gerard Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 153 St &amp; E 157 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 155 St &amp; Courtlandt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 156 &amp; Brook Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 156 St &amp; Courtlandt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 157 St &amp; River Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 158 St &amp; Melrose Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 16 St &amp; Cortelyou Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 160 St &amp; Tinton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 161 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 161 St &amp; River Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 163 St &amp; Tiffany St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 163 St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 165 St &amp; Clay Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 165 St &amp; Fox St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 165 St &amp; Jerome Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 167 St &amp; Bryant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 167 St &amp; Clay Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 167 St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 169 St &amp; Fox St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 169 St &amp; Webster Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 17 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 17 St &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 170 St &amp; Clay Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 170 St &amp; Sheridan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 170 St &amp; Webster Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 171 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 171 St &amp; Webster Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 174 St &amp; Longfellow Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 174 St &amp; Walton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 176 St &amp; Clinton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 178 St &amp; Monterey Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 179 St &amp; Daly Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 18 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 180 St &amp; Monterey Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 180 St &amp; Prospect Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 181 St &amp; Bathgate Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 182 St &amp; Belmont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 182 St &amp; Grand Concourse&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 182 St &amp; Morris Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 182 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 184 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 187 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 188 St &amp; Creston Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 188 St &amp; Hughes Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 189 St &amp; Bathgate Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 19 St &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 191 St &amp; Bathgate Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 20 St &amp; FDR Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 201 St &amp; Briggs Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 21 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 22 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 26 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 27 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 3 St &amp; Ave A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 3 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 34 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 34 St &amp; Linden Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 35 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 38 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 39 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 4 St &amp; Ave B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 40 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 40 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 41 St &amp; Madison Ave (SE corner)&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 41 St &amp; Madison Ave (SW corner)&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 43 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 43 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 44 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 48 St &amp; Tilden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 49 St &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 5 St &amp; Ave A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 5 St &amp; Cooper Sq&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 50 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 51 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 51 St &amp; Linden Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 53 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 54 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 56 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 56 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 58 St &amp; 1 Ave (NW Corner)&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 6 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 63 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 7 St &amp; Ave B&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 7 St &amp; Ave C&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 77 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 8 St &amp; Caton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 81 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 85 St &amp; East End Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 9 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 92 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 94 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Burnside Ave &amp; Ryer Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Fordham Rd &amp; Webster Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Houston St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Mosholu Pkwy &amp; E 204 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Mosholu Pkwy &amp; Van Cortlandt Ave E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E New York Ave &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Tremont Ave &amp; E 176 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;E Tremont Ave &amp; Jerome Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eagle St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eames Pl &amp; Claflin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Brooklyn Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave (SW Corner)&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Kingston Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Rochester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Schenectady Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eastern Pkwy\\t&amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Echo Pl &amp; Grand Concourse&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Edgecombe Ave &amp; W 141 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Edgecombe Ave &amp; W 145 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Edgecombe Ave &amp; W 150 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Edgecombe Ave &amp; W 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eldert St &amp; Bushwick Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Eliot Ave &amp; 60 Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Elmhurst Ave &amp; Forley St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Elmhurst Ave &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Empire Blvd &amp; New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Engert Ave &amp; McGuinness Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Evergreen Ave &amp; Noll St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Faile St &amp; Garrison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fairview Ave &amp; Linden St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Featherbed Ln &amp; Jerome Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Featherbed Ln &amp; Nelson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Flatbush Ave &amp; Eastern Pkwy&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Flatbush Ave &amp; Fenimore St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Flatbush Ave &amp; Ocean Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Flushing Ave &amp; Woodward Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Forest Ave &amp; Summerfield St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Forley St &amp; Lamont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Forsyth St\\t&amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fort Washington Ave &amp; W 173 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fort Washington Ave &amp; W 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Franklin Ave &amp; E 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; Harlem River Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 139 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 145 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Freeman St &amp; Reverend James A Polite Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Freeman St &amp; Southern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fresh Pond Rd &amp; 69 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fresh Pond Rd &amp; Eliot Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fresh Pond Rd &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Front St &amp; Jay St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frost St &amp; Debevoise Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Frost St &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ft. Hamilton Pkwy &amp; E 2 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ft. Hamilton Pkwy &amp; E 5 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ft. Washington Ave &amp; W 190 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton Ave &amp; E 168 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton Ave &amp; E 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton Ave &amp; St. Paul&apos;s Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Irving Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Saratoga Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Fulton St &amp; Williams Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Garrison Ave &amp; Manida St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gerard Ave &amp; E 146 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gerard Ave &amp; E 164 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gerard Ave &amp; E 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gerard Ave &amp; McClellan St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Giles Pl &amp; Fort Independence St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gillmore St &amp; 27 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gleane St &amp; Britton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Goble Pl &amp; Macombs Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Goulden Ave &amp; Bedford Park Blvd W&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Goulden Ave &amp; W 197 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Goulden Ave &amp; W 205 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Gramercy Park N &amp; Gramercy Park E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; 55 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; 58 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; Remsen Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; W 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Ave &amp; W Fordham Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 144 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 156 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 161 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 164 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 166 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 171 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 176 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 184 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 192 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 196 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 197 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 199 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 203 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E 205 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; E Mosholu Pkwy S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand Concourse &amp; East Mount Eden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grand St &amp; Samuel Dickstein Plaza&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grant Ave &amp; E 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Great Jones St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Green St &amp; McGuinness Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greene Ave &amp; Grandview Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greene St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenpoint Ave &amp; 47 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenpoint Ave &amp; Monitor St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenpoint Ave &amp; West St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich St &amp; Perry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich St &amp; Rector St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Greenwood Ave &amp; E 4 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grove St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Grove St &amp; Fresh Pond Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Halsey St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Halsey St &amp; Evergreen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Halsey St &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hamilton Pl &amp; W 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hamilton Pl &amp; W 140 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hancock St &amp; Malcolm X Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hancock St &amp; Stuyvesant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hancock St &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Harlem River Dr &amp; W 155 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Harman St &amp; Seneca Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Harrison Pl &amp; Porter Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hart St &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hazen St &amp; 20 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Middagh St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; Remsen St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Henry St &amp; W 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Herkimer St &amp; Eastern Pkwy&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Herkimer St &amp; New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hoe Ave &amp; Jennings St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Home St &amp; Westchester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Howard St &amp; Lafayette St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hudson Blvd E &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hudson Blvd W &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hudson St &amp; N Moore St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hudson St &amp; W 13 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hughes Ave &amp; Oak Tree Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Hunts Point Ave &amp; Bryant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Icahn Stadium&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;India St Pier&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Intervale Ave &amp; Kelly St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Intervale Ave &amp; Westchester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Inwood Ave &amp; W 170 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irving Ave &amp; DeKalb Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irving Ave &amp; Halsey St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irving Ave &amp; Harman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irving Ave &amp; Jefferson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irving Ave &amp; Palmetto St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Irwin Ave &amp; W 232 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Isham St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ithaca St &amp; Baxter Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jackson Ave &amp; 49 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jackson Mill Rd &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jackson Mill Rd &amp; 93 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jay St &amp; York St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jefferson Ave &amp; Evergreen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jefferson Ave &amp; Patchen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jefferson St &amp; Cypress Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; Anderson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; Bedford Park Blvd E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; E 164 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; E 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; E 198 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; E Mosholu Parkway S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; Ogden Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; W 177 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; W 184 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; W 193 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; W 195 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Jerome Ave &amp; W Fordham Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;John St &amp; William St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Johnson St &amp; Brooklyn Bridge Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Judge St &amp; Britton Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Keegan Rd &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kenmare St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kent Ave &amp; Division Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kent Ave &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kent St &amp; McGuinness Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;King St &amp; Varick St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingsbridge Terrace &amp; W 230 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingsland Ave &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingston Ave &amp; Carroll St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingston Ave &amp; E New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingston Ave &amp; Herkimer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingston Ave &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kingston Ave &amp; Park Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; Cooper St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; George St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; Halsey St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; Hancock St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; Moffat St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Knickerbocker Ave &amp; Thames St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette Ave &amp; Ft Greene Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette Ave &amp; Hunts Point Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette Ave &amp; Stuyvesant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lee Ave &amp; Taylor St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lefferts Ave &amp; Albany Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lefferts Ave &amp; Schenectady Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 133 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 140 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 144 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Ave &amp; W 146 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lenox Rd &amp; E 43 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Leonard St &amp; Boerum St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lewis Ave &amp; Decatur St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lewis Ave &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lewis Ave &amp; Greene Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 128 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 26 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; E 36 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; Patchen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lexington Ave &amp; Stuyvesant Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Liberty St &amp; Nassau St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lincoln Ave &amp; E 134 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lincoln Ave &amp; E 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lincoln Pl &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lincoln Rd &amp; Ocean Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Linden Blvd &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Linden St &amp; Knickerbocker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Longfellow Ave &amp; Aldus St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Longfellow Ave &amp; E 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Longwood Ave &amp; Southern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lorimer St &amp; Calyer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lorimer St &amp; Harrison Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Loring Pl North &amp; W 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Lott St &amp; Erasmus St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Louis Nine Blvd &amp; Intervale Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;MacDonough St &amp; Malcolm X Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;MacDonough St &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;MacDougal St &amp; Rockaway Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macombs Pl &amp; W 152 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macombs Rd &amp; Featherbed Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macombs Rd &amp; W 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macon St &amp; Howard Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macon St &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Macon St &amp; Patchen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison Av &amp; E 51 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison Ave &amp; E 26 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Cypress Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Evergreen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Forest Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Malcolm X Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Seneca Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Madison St &amp; Woodward Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Main St &amp; Plymouth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Malcolm X Blvd &amp; DeKalb Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Manhattan Av &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Manhattan Ave &amp; Devoe St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Maple St &amp; Albany Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Maple St &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Maple St &amp; New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marble Hill Ave &amp; W 225 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marble Hill Ave &amp; W 227 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marcy Ave &amp; Lynch St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marcy Ave &amp; Rutledge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Margaret Corbin Plz &amp; Ft Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Marion Ave &amp; Mosholu Pkwy&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Market St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Martense Ave &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Matthews Ct &amp; Coney Island Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Maurice Ave &amp; 53 Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;McDonald Ave &amp; Vanderbilt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;McKeever Pl &amp; Sullivan Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;McKibbin St &amp; Bogart St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Melrose Ave &amp; E 150 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Melrose Ave &amp; E 154 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Melrose St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Menahan St &amp; Central Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Menahan St &amp; Onderdonk Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Menahan St &amp; Seneca Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Menahan St &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; 65 Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; Stewart Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Metropolitan Ave &amp; Vandervoort Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mets Plaza at Citi Field&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Midwood St &amp; Kingston Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Midwood St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Moffat St &amp; Bushwick&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monitor St &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monroe St &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monroe St &amp; Patchen Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Montague St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morgan Ave &amp; Lombardy St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morgan Ave &amp; Maspeth Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E 142 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E 153 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E 163 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E 171 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E 184 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; E Burnside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morris Ave &amp; McClellan St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morton St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Morton St &amp; West St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Motorgate&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mount Eden Pkwy &amp; Eastburn Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Murray St &amp; West St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Murray St\\t&amp; West St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; 65 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; Fleet Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; Grove St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; Linden St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 10 St &amp; Berry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 5 St &amp; Northside Piers&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 5 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 7 St &amp; Driggs Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N 9 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N Henry St &amp; Norman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N Moore St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;N Portland Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nagle Ave &amp; Ellwood St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nagle Ave &amp; Thayer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Naples Terrace &amp; Godwin Terrace&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nassau St\\t&amp; Duffield St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;National St &amp; 45 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nelson Ave &amp; 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nelson Ave &amp; W 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nevins St &amp; Schermerhorn St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;New York Ave &amp; Hawthorne St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;New York Ave &amp; Lenox Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;New York Ave &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;New York Ave &amp; Snyder Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;New York Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Norman Ave &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Norman St &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nostrand Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Nostrand Ave &amp; Rutland Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ocean Ave &amp; Crooke Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ocean Ave &amp; Tennis Ct&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ocean Pkwy &amp; Church Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ogden Ave &amp; Merriam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ogden Ave &amp; W 164 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ogden Ave &amp; W 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Old Broadway &amp; W 133 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Old Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Old Slip &amp; South St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Onderdonk Ave &amp; Dekalb Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Onderdonk Ave &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Orchard St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Rochester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Sackman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Thomas S. Boyland St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Troy Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pacific St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Page Pl &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Palmetto St &amp; Traffic Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Parade Pl &amp; Crooke Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; E 162 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; E 179 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; E Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Cir &amp; East Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Pl &amp; Buffalo Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Pl &amp; Thomas S. Boyland St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Park Pl &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Parkside Ave &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Parkside Ave &amp; Ocean Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Parkside Ave &amp; Parade Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Patchen Ave &amp; Bainbridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Paul Ave &amp; Mosholu Pkwy&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Paul Ave &amp; W 205 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pearl St &amp; Peck Slip&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pearl St &amp; York St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Peck Slip &amp; South St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Perry St &amp; Greenwich Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Picnic Point&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pierrepont St &amp; Monroe Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pinehurst Ave &amp; W 187 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pitkin Ave &amp; Grafton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Plaza Dr &amp; W 170 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Plaza St East &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Popham Ave &amp; W 174 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Powers St &amp; Olive St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;President St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;President St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;President St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;President St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; E 151 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; E 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; Greenwood Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; Jennings St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; Longwood Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Ave &amp; Vanderbilt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park SW &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park SW &amp; 16 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park SW &amp; Greenwood Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park SW &amp; Vanderbilt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park W &amp; 20 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Pl &amp; Howard Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Pl &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Prospect Pl &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Putnam Ave &amp; Knickerbocker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Putnam Ave &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Putnam Ave &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Queens Blvd &amp; 56 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Queens Blvd &amp; 56 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Queens Blvd &amp; Albion Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Queens Blvd &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ralph Ave &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Randall&apos;s Island - Field 10&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;River Ave &amp; E 151 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;River Ave &amp; E 153 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;River Ave &amp; McClellan St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;River Ter &amp; Warren St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 138 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 145 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 148 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 153 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rockaway Ave &amp; Bainbridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rogers Ave &amp; Lenox Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rogers Ave &amp; Lincoln Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rogers Ave &amp; Snyder Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rogers Ave &amp; Sterling St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rogers Pl &amp; E 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Roosevelt Ave &amp; 104 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Roosevelt Island Tramway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rugby Rd &amp; Albemarle Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rugby Rd &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rutgers St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Rutland Rd &amp; E 45 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Ryer Ave &amp; E 182 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 2 St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 4 St &amp; Roebling St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sands St &amp; Jay St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sands St Gate&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schenectady Ave &amp; Cortelyou Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schenectady Ave &amp; Maple St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schenectady Ave &amp; Pacific St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schenectady Ave &amp; President St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schenectady Ave &amp; Prospect Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Schermerhorn St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Scholes St &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Seaman Ave &amp; Beak St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Seaman Ave &amp; Isham St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; Giles Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; Hall of Fame Tce&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; Hillman Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; W 195 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; W 231 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; W Burnside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sedgwick Ave &amp; W Tremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Seneca Ave &amp; Decatur St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Seneca Ave &amp; Irvine St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Shakespeare Ave &amp; W 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sharon St &amp; Olive St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Shea Rd &amp; Boat Basin Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sheridan Ave &amp; E 168 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sheridan Ave &amp; E 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sherman Ave &amp; E 166 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sherman Ave &amp; Thayer St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Shore Blvd &amp; Astoria Park&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Skillman Ave &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Skillman Ave &amp; 54 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Skillman Ave &amp; Honeywell St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Snyder Ave &amp; Schenectady Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Soissons Landing&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Somers St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Somers St &amp; Rockaway Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South End Ave &amp; Albany St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South Railroad Ave &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South St &amp; Broad St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South St &amp; Pike St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; Avenue St. John&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 142 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 149 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 172 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 174 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 180 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; E 187 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; Tiffany St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southern Blvd &amp; Xavier Way&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Southpoint Park&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Spring St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Spruce St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Spruce St &amp; Nassau St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Ann&apos;s Ave &amp; Westchester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Felix Ave &amp; 61 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St James Ave &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Johns Pl &amp; Howard Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Johns Pl &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Ave &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Ave &amp; Rochester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Ave &amp; Thomas S. Boyland St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Marks Pl &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Mary&apos;s St &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Nicholas Ave &amp; W 134 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Nicholas Ave &amp; W 137 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St Nicholas Ave &amp; W 150 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Ann&apos;s Av &amp; Bruckner Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Ann&apos;s Ave &amp; E 144 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Johns Pl &amp; Kingston Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Nicholas Ave &amp; W 155 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Nicholas Ave &amp; W 157 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;St. Nicholas Terrace &amp; Convent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stagg St &amp; Morgan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stanhope St &amp; Fairview Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stanton St &amp; Norfolk St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;State St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;station_name&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; 19 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; 21 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Steinway St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stephen St &amp; Seneca Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; New York Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Ralph Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Rochester Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling Pl &amp; Schenectady Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sterling St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stewart Ave &amp; Johnson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stratford Rd &amp; Beverley Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Strong St &amp; University Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stuyvesant Ave &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stuyvesant Ave &amp; Hart St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sullivan Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sullivan Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Summerfield St &amp; Cypress Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sumpter St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Sunken Meadow Comfort Station&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Suydam St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Suydam St &amp; Knickerbocker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Suydam St &amp; St. Nicholas Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Taylor St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Thomas S. Boyland St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Thomas S. Boyland St &amp; Macon St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Thomas S. Boyland St &amp; Marion St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Throop Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tibbett Ave &amp; W 234 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tiebout Ave &amp; E 184 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tiebout Ave &amp; E Fordham Road&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tilden Ave &amp; Lott St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tilden Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tinton Ave &amp; E 165 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Townsend Ave &amp; E 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Troy Ave &amp; Linden Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Troy Ave &amp; Park Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Troy Ave &amp; Sterling Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Turner Pl &amp; Coney Island Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Tyler Ave &amp; Maurice Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union Ave &amp; E 169 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Ave &amp; Brandt Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Ave &amp; Macombs Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Ave &amp; Morton Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Ave &amp; W 168 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Ave &amp; W Burnside Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Valentine Ave &amp; E 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Valentine Ave &amp; E 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Buren St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Cleef St &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Cortlandt Park S &amp; Dickinson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Cortlandt Park S &amp; Gouverneur Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Dam St &amp; Greenpoint Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Dam St &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Sinderen Ave &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Van Sinderen Ave &amp; Truxton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vernon Blvd &amp; Queens Plaza S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Verona Pl &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vesey St &amp; Church St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Vyse Ave &amp; E 181 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 10 St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 111 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 12 St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 133 St &amp; 12 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 135 St &amp; Lenox Terrace Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 140 St &amp; Riverside Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 144 St &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 145 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 146 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 147 St &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 148 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 155 St &amp; Frederick Douglass Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 159 St &amp; Edgecombe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 160 St &amp; St. Nicholas Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 163 St &amp; Edgecombe Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 163 St &amp; Riverside Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 165 St &amp; Fort Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 168th S &amp; Fort Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 17 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 17 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 170 St &amp; University Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 171 St &amp; St. Nicholas Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 176 St &amp; Montgomery Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 180 St &amp; Ft Washington Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 181 St &amp; Riverside Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 186 St &amp; St. Nicholas Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 190 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 190 St &amp; St. Nicholas Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 192 St &amp; University Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 20 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 20 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 204 St &amp; Nagle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 204 St &amp; Vermilyea Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 211 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 212 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 218 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 218 St &amp; Indian Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 225 St &amp; Exterior St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 230 St &amp; Marble Hill Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 233 St &amp; Albany Crescent&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 238 St &amp; Tibbett Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 25 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 25 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 27 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 29 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 30 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 30 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 33 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 34 St &amp;\\tHudson Blvd E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 35 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 35 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 36 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 37 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 39 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 40 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 40 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 42 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 44 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 47 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 47 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 48 St &amp;  Rockefeller Plaza&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 50 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 51 St &amp; Rockefeller Plaza&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 54 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 54 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 56 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 56 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 84 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 87 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Broadway &amp; W Houston St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Burnside Ave &amp; University Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Fordham Rd &amp; Loring Pl N&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Mosholu Pkwy S &amp; Sedgwick Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Tremont Ave &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Tremont Ave &amp; Matthewson Rd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;W Tremont Ave &amp; Montgomery Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wadsworth Ave &amp; W 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wadsworth Ave &amp; W 179 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wakeman Pl &amp; Ridge Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Waldron St &amp; 108 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wales Ave &amp; E 147 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walker St &amp; Baxter St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wallabout St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walnut Ave &amp; E 136 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 151 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 153 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 168 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 171 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 176 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Walton Ave &amp; E 183 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wards Meadow Comfort Station&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Warren St &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Warren St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Warren St &amp; W Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; E 163 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; E 167 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; E 174 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; Empire Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Ave &amp; Park Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Park&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington Square E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington St &amp; Barrow St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Washington St &amp; Laight St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Water St &amp;  Fletcher St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Water St &amp; Gouverneur Ln&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Water St &amp; Main St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Waterbury St &amp; Stagg St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Waterloo Pl &amp; Crotona Park East&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Webb Ave &amp; W 190 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Webster Ave &amp; E 166 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Webster Ave &amp; Ford St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Weeks Ave &amp; E 175 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West Broadway &amp; Watts St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West End Ave &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West End Ave &amp; W 78 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West Farms Rd &amp; Boone Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West St &amp; Liberty St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;West Thames St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Westchester Ave &amp; E 156 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Westchester Ave &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Westchester Ave &amp; Longwood Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Westchester Ave &amp; Southern Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;White St &amp; Johnson Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;White St &amp; Moore St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Whitehall St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Whitney Ave &amp; Ketcham Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wilkins Ave &amp; Crotona Park E&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;William St &amp; Pine St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willis Ave &amp; Bruckner Blvd&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willis Ave &amp; E 137 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willis Ave &amp; E 141 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willis Ave &amp; E 143 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Onderdonk Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby Ave &amp; Wyckoff Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby St &amp; Ashland Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Willow Ave &amp; E 133 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wilson Ave &amp; Moffat St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wilson Ave &amp; Troutman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Windsor Pl &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Windsor Pl &amp; Howard Pl&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Winthrop St &amp; Albany Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Winthrop St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Winthrop St &amp; Rogers Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Winthrop St &amp; Schenectady Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Withers St &amp; Kingsland Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodhaven Blvd &amp; Hoffman Dr&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodside Ave &amp; 55 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodside Ave &amp; 60 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodside Ave &amp; 69 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodside Ave &amp; Roosevelt Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodward Ave &amp; Harman St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Woodward Ave &amp; Starr St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff Av &amp; Jefferson St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff Av &amp; Stanhope St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff Ave &amp; Cooper Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff Ave &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wyckoff St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Wythe Ave &amp; N 13 St&quot;' />
              <groupfilter function='member' level='[none:station_name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>95.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</column>
            <column>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</rows>
        <cols>[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:qk]</cols>
      </table>
      <simple-id uuid='{8ADD8022-6EBA-43AE-8F17-1C3B5CCC8833}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='weather+ (dep-project)' name='federated.1kpbq700qvife118ejv5q10f6usf' />
      </datasources>
      <datasource-dependencies datasource='federated.1kpbq700qvife118ejv5q10f6usf'>
        <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
        <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
        <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
        <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
        <column-instance column='[temperature]' derivation='None' name='[none:temperature:qk]' pivot='key' type='quantitative' />
        <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88625' id='15' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
            <zone h='88625' id='12' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
              <zone h='88625' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
                <zone h='88625' id='5' type-v2='layout-basic' w='98400' x='800' y='10375'>
                  <zone h='39625' id='3' name='Sheet 1' w='49200' x='800' y='10375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='8' name='Sheet 2' w='49200' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28125' id='18' name='Sheet 3' w='49200' x='50000' y='10375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28125' id='22' name='Sheet 6' w='49200' x='50000' y='38500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32375' id='23' name='Sheet 4' w='49200' x='50000' y='66625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='9375' id='19' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' type-v2='filter' values='database' w='27200' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9375' id='20' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' type-v2='filter' values='database' w='27200' x='28000' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9375' id='21' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]' type-v2='filter' values='database' w='27200' x='55200' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9375' id='24' name='Sheet 4' pane-specification-id='1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' type-v2='color' w='16800' x='82400' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='19' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' type-v2='filter' values='database' w='27200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='20' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' type-v2='filter' values='database' w='27200' x='28000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='21' name='Sheet 1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]' type-v2='filter' values='database' w='27200' x='55200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39625' id='3' is-fixed='true' name='Sheet 1' w='49200' x='800' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28125' id='18' is-fixed='true' name='Sheet 3' w='49200' x='50000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28125' id='22' is-fixed='true' name='Sheet 6' w='49200' x='50000' y='38500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='8' is-fixed='true' name='Sheet 2' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32375' id='23' is-fixed='true' name='Sheet 4' w='49200' x='50000' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='24' name='Sheet 4' pane-specification-id='1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' type-v2='color' w='16800' x='82400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4CF2BC0A-D4C2-4524-8CF5-4E76C2852E04}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' type='color' />
          </strip>
          <strip size='160'>
            <card param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B88A168-3051-4A77-95C7-8F6C366C41FD}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:hour:qk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{081AEA91-F56F-4661-BA1F-4C1A61D7E0AF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:borough:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:month:qk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_complex:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58C70168-8CB3-431E-BBFB-CCFFCD3FBE02}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:temperature:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{219823B8-6E58-43ED-920E-6511E31D40A5}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[__tableau_internal_object_id__].[cnt:bike_rides_56951E42E78843B0B1A70B28A23FF8D2:ok]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:day_of_week:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:start_station_id:nk]</field>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{428EBD5F-F7A3-4858-8FDA-6FF5113863AC}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kpbq700qvife118ejv5q10f6usf].[none:station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{23E5D057-0B6B-48A3-9811-C2D52F1DABEA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight field='[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1kpbq700qvife118ejv5q10f6usf].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 6' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7B0422BD-5645-4835-8477-03A341458EF7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      6uqipaWFd999d8S2iKJIZ2cnb7zxhiSgnNcbSG9vLw8//DCiKHL69Gmef/55oqKieOONN8jL
      yxtUdtasWTz33HO0trYCDsvE4dp28uRJ9u/fL937zp07hy0H8MILLwBw5swZnn76aYKDg/n0
      00958803AcjPz+ff//3fqaqqwmq18tRTT7n2MNzItPQEttvtAJI0B8acHYWGhl5UXU511EDG
      qsu5t3Ep9Qw325mIemw2GwqFYpD+c6z7SU9P99h6wD19543v3EB27drFa6+9hlKpZN68efzm
      N7+RBt8tW7YQHh7O2rVr+Y//+A+uv/566Tyj0UhAQMCI142Pjyc7Oxuj0SidV1tbK/1eXV2N
      xWIhKCiIiIgIKioquO++++ju7kYQBP7rv/5r2OtarVYef/xx7rrrLhISEnj99dd56KGHiImJ
      ITMzk6effnqQuub+++/n008/5dFHHyUwMJAHHnhg2LaBY/VSX1+PTqcjJyeHa6+9dthyTt5/
      /30efvhhkpKSWLduHXfccYe0IvrBD37ANddcA8C+ffvGfA7uZlquAJyziPFwsbOxc+fOjfuc
      i5mNuaue8+fPY7GMrUsfyMXMzN1VD7in77zxnRuIj4+PJDjDw8Pp6xu6J6bVagcJQICgoCCa
      m5svut4DBw6wa9cuzp49C0BKSgrPP/88f/rTn3jmmWd47LHHhj3v4YcfRqlUkpWVBUB7ezuv
      vfYaTz75JM8999wQ4atUKrnuuuv4wx/+wC233MIzzzwz7HUPHz7M/fffz8GDByktLZXUiaPR
      3t4uWTIKgoC/vz9Wq3VIuUvddJ4MpuUKQKvVuqwPNRgMaLVaGhsbmT17/G74ERERLpWz2WxY
      LBa6urrGtTk13noMBgO+vr5UVlYyY8aMcdcTGhrq0gzZWZcoiigUCnx8fDyyHnBP33njOzcQ
      u90u7YOcPXuWmJiYIWXOnj1LWFjYoGObN2/m9ddf55FHHkEQhGH3KtRqtaQPv5Dvfe97I7bJ
      z89vxAnBtm3beP/99/njH//IHXfcQWJiItdcc41klePcO3JSU1NDYqJjr2/WrFmYTKZh27Zz
      506eeuopwsLCqK2tZfv27WPeQ3JyMidPnmTx4sWYTCb6+vomfZN/opgerbwAURSlJflYFBcX
      o9FoiI6O5vTp09KMwVWGk+TDUVpaSlJSEufOnUOtVo/brM7VeoqLi5k9ezY9PT20t7ezbNmy
      cdXjyowGwGw2c+7cOfr6+ggODkav1xMcHOxx9YB7+s4b37mBM9LbbruNLVu2kJGRwZkzZwbp
      q3/5y18SHBxMbW3tEJXM+vXrKSws5M477yQyMpL29nZefXVwXKT58+fz05/+lPPnz7NmzRpp
      IB6OyspK7r//fux2O729vdx2220jlr3rrrv47W9/y7vvvsutt97K1q1bSUxMpKuri4yMDG6/
      /Xap7JtvvkltbS3R0dHU19fzb//2b8O2bcWKFTz55JPExsbS0dEhmZpeWG7VqlXStb/3ve/x
      8MMPM2vWLEpLS/nhD384Zn97CiOagU4lF2MlMRJ5eXlYLBYWLFhAU1PTEOuAiaqrqamJ4uJi
      0tLSaGpqGjK4OGdXl8rp06epq6tj3bp1nDp1aoj53kTdj91uZ8+ePURERKBUKklPT0er1bq9
      HudMbrL7bqKeD3jOOzfeesxmMw0NDcTFxUmz+P/+7//mBz/4AX5+foSEhIw4iBkMBkwm04hl
      LBYLnZ2dhIeHD1EjTRSiKKLX69HpdMOu1iwWCz09PQQHBw9qw4Vt6+zsxGazDVlVjXYPdrud
      +vp6QkJC0Ol0k3J/k8G0EADNzc1oNBpaWloueqPQ1brKysrQarVERETg6+s7YfVcOMCUlZUB
      F7/xORLD3U9aWhrl5eWkpaVNu3qGEwCT0XcXPh9veOcmQtBcjM29zPRhWqiAgoODyc/Pp6Gh
      gc7OTgDS0tJGtbIwGo0oFAqMRuO4VRfHjh0jNDQUrVaLr6/vmN5+er0epVKJr6+vy7o/vV5P
      ZWWldD9RUVFj6qX1eofT1XjuJyAggMOHD1NbWyvpMBcvXjxqO/V6PUFBQXR1dblcl7vqcZ43
      2X3nje/cxbB169ZJu7bM1DMtVgBO2tvb0Wq1aDSaMV/6trY2Kisr0ev1zJ07F3BsTF44wxqu
      rq6uLjQaDVar1aXl3KFDh7Db7URHR+Pn54dKpSIqKmpQmeFUDO3t7eh0OkRRHKT2GImcnBxs
      Npt0P/7+/kMGmuHuRxRFOjo68PHxQafTjamLLCwsJDAwkMrKSjIyMgCIiYkZtOx1Vz0jqYAm
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      fx+a4vRGnSATAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
      eL7rXA8LuDZnkol9c4VdRaDfOg1p9ecnVMZMRBQoxpXyTsh2zE53fcbyf1tFteCKouC73/0u
      +vr68NWvfhXnz5/HZz7zmWKymBIMw4DevAbCnbQ9gQUJ8uY/BpGrAIcJhSC7T/70/XLT0tqu
      IYnph9aMFGs6XzItkFLJtnPAJT5LXNo5STtXrBWxWcqawnPnalwXua3DQnsI9nt2CbOR4ZM/
      naztcqFvpNkUBKDEFcg+2T2tgwKayyKVghKP21Yh50mfNWpijb9jD4acEJBA3ax5+wfM3tHy
      uTV4v7MfAPDsx5eiqbYq9/68GX7+s5iGqGnCTcalfoYEmqpClhMrjpFaRJYyCSVirGbGvvq4
      SAUwNDSEtrY2LFiwAIIgYGAgm/Od8sIYgz5wOTNCV6Ec/l5ZZMg+KyRdGeQ5drP9px3bp0ky
      BtMpWgnyTR4nH5rc8pqdGJ3S3Pm6jF+4j6uQtDKd19jPCUmsuHTZEcz1nnN8ZrqpyP+p6zoU
      +768Nrmc9VQs+b9Ha09ghzK21atLeMZx2vdEgg0QlzwKQvM0B16uQp7mDEXiONs9ZJ3/6tDF
      KSuLAA5FYNn54R6W+hk5wwgpUgE0NzdDkiS88847+PDDD/HHf/zHU3F/RSMIAkQ6XW0nzGnu
      KYGYU22GKSY/L2vdy6mYlbb6OvjbPzNn83AmRNBfPnM4Q2LVMLOHTIyCpe7u7kZ/fz9++7d/
      G1/4whcAJN9EvUfTNMTjCqQs8dLKz4IEamC99QDOY+ISVmgaYm7LlhoPcamTbAO+1qFbPRaW
      Rtc1CIKYJQ1xfLjLR9IuLSwPhoQjKustPFcZyF0HyfOMy7LXgVnnLt+46zNZWD3kjU98aKoG
      UTLfwjMvSYQkDLTM4UrE9jLAGFIG3MJ/wM5nrTSQQB1o88qS5jnbkAQBskgRcxmKpJTgyU1L
      4JfN7y39p5r66ZHMpy4tMUm7LuWIMq11S/s9p/8sSCKw4CdpcHAQ77zzjmMXsDlz5qC1tbXQ
      LKYMURQRaFwA9B13jWeGCiL6Ye/2Jg6ydJeTcaljxxdh70KDgIgaiMMjp1s5ucskOdNlz1fX
      NNDkJuGFlmlL57bqtJC8GCMwkmUXUp+O8QGCZJc0s0zbNa7Xmue6okBw7Amcpd4cDbvLvTvy
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      omDBGrT7eWPWVEZP/jPB9iNYC8qpePK3cJbOu+PvmgvXgVnn4dYYzDwGmcaQVgKwWCxs2bKF
      cHhykeq77ezy5cucOXOGZcuWEY1Gyc+fXHjCarUSiUQoLCxEUZTpz6WlpdN/D3DmzBkqKiqm
      m1o0TUPX9el/38wnEcMwTH8SUhRlzsdw6/71ZAwtFiRv3oq0Y7oxFJxeASydbc38/e35peTV
      LSfcdwktMp7x2gefpU74GXz/ByRGruOZv4ryTf8biuPucwrMvg6mYjDbgxhDWglA0zSuXbtG
      IpFA0zTKy8tpaGj43M8lk8npJ/4333yTtWvXcuPGDerr60kmk1RUVNDV1UVdXR3JZJKysjJu
      3rxJbW3tdFJ57LHHiMViXLp0iebmZmy2X4QajUZv+zzb8vPzTd0/gKqqpsagadp0P41Zbj0G
      ycgo6BrOosq0Y+run5zYt6S+LK1tNU3DarWa9sX3LtlEuOcc/hM/xTNvBY7CKuyFlVgdeSh2
      Z1pxGYZB5OZlBj/4G7R4mJJHn6ekZXdKE+py4Vo08zwYhoGmaaYeg0xjSOunHQ4Hzz33HLqu
      093djc/nY/Xq1Z/7udHRUU6ePInVaqWqqoqamhra29tpbW1l5cqVVFZWcvHiRfbs2cOKFSuo
      qamhra2N1tZWVq1ahcvlwuv10tLSwqFDh1iyZInpN9xbSSdw7kkGJovA2TMoP9ze68dht2a9
      dML95ql7BE/DGsLXzxC5MVmiHcWC1ZWPLa8Ye1EVjsJKHEXVOIqqJtdIsDkmf+yWm6Wh64xf
      3M/Ixz/DYndSvf1beOavyoknWpFdad1VVVXl3LlzqKqK3+8nkZi5ImFlZSXPPffcbX+2ffv2
      2z7v2LHjrp+nmoSeeuqpdEKcFbImcO5JBCaHgDoK06sCqmo6nX2jVBV7KMp/sIb3KlYbpVt+
      k7L1L6IGh0gEhkgGBkiM+0gGhwn3nGVCveU7qijYPCWfvilUfJoUKgl2HmOi6ySO0nlUb/+W
      1PCfQ9LuAyguLiYWi1FSUsKKFSuyFVdOM7uzR3xeMjAIiiXtIaChSJyB0Qm2rpqf0xPA7sbm
      KcFRUEZebfP0nxm6ip6Io4ZHSQQGJ5NCYIBEYIjYSA9RXzuG/ouO04LGdZQ/8TJW59xc42Ou
      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
      6iaWUNmyqiHj38PsYzC1fzNvvrkUg1ksFsv0fcMsuq6b/n3M5DzMSgLQNI2lS5ficDh4/fXX
      qayspK2tjdraWpLJJBUVFVy/fp2amprpDLZmzRpUVeXcuXO0tLRgtVqnT7LZJ7ygoCCl/edV
      NVG55V8z8P4PGHzve9R+6dt3HSOf77byr3evYl1zHf/fGx/zw7cvcLZzkG/90lpqSm9/G1AU
      xfSLPtg+WfenaPlTKceSVDV+/M4F3jzaziMLytm0oj7j38PsY6CqKlar1dSbr6qqWCwW0xOh
      2efBzCRoGIbpx8AwjIzui7Ny1SQSCd577z327NlDc3Mz5eXlGIbBvn37WL16NVVVVSSTSfbs
      2cPatWtxu90UFxfz6KOPEgqFZhx2aaZgMPWFXvIXrqX00eeJj1xn6MMf3XEdgSmKotDcUM6f
      fWsnX1rfxMVrQ/z+/3yXt09cRcuhvgEjGSV6/TSO0nm4KlKr+6PrBj95d/Lmv2pRJa/82iYc
      din9IIRZFONBG3YCBAKBu3bE5tr+DUNn8NAPCXUeo7hlN6WPfTXlp5WznT7++s3T+EYneGxp
      Db/9lUcpL/IQi8Vwucwpm2wYOqOn32L07FuUP/F1ilJY9D2eVPnBW2c4cKqbnY818ltfXo3T
      fm8voGYeA5jsp3I4HKa+AcTjcex2u6lvAHP9PBiGQSKRwOl0mrL/e4lBxt5lQJ9hfP/dKIqF
      ik1fx12zlLHzPyfY9mHK265uquYv/93T7Hq8kdPtPv79d9/hvdPXTFtfID7Wz829f8no2bdw
      1yylYNG6L9xmfCLG//2jD9l/qpvd65v4t8+vveebvxDi3kkCyEAsFkt7G4vNMVk4rrCK4eP/
      ROTm5ZS39bgcfOv5tfzh1zfhdtj47msn+It/OkH/SGjW5g3oWpLRs3voffM/Ex3oxNu8jfIn
      v4nVcZfRUMDN4SD/8QcH+eTaEL+0aQm/+aXVWCxS8E2IXCBNQBkIhUIUFGS2aHl8rJ++t/7L
      5KIpzdvwLt6Io7Ay5e0nogn+dt9ZPjh7HcOAR5dUs2vdIlYtqspaLZ3oYBfDR/+euP8GjpJ5
      VGx6GUfZAjRNw+Fw3HG7810D/OVPjxOJJ/mNZ1fz7Pqm+xrXXG96mIpBmoCkCSjTGCQBZKC/
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
      Wt/T57FdvZIk7ZreyHH/v+/zRet9Xhz4T71/13m8iHr+/54X/6389DG2EvdxnU+Xn76fIuW4
      9957772ty3y5kCSJ69evMzY2htvtJjMzk56eHrKzs2lpaaG4uDiq8b6pqSmuXbtGZmYmOp2O
      oaEhOjs7GR0dxWw209nZyeDgIOPj4xQXF3Pr1i0KCwvp6elBkiR0Ot2WY4bDYZqamnjw4AHD
      w8OYzWa+/PJLrFYrc3Nz5Ofn89lnn2Gz2fD5fOh0Ovr6+sjJyeH69euYTKao3zDo6OhgeHiY
      e/fukZeXh91ul/WWlpZisVgYGBjg4cOHlJSUyHp7e3sJhUKkpqZGFRdgbW2NCxcuUFFRwfr6
      Op9//jmjo6NkZWWxsLDAV199xdDQEEVFRfT29mIwGHC73fT395Ofnx9VzObmZsbHx3n06BH5
      +fl8/fXXjI6OMjs7i8lk4vPPP8dms7G2tkZ6ejq9vb3k5uZy48YN8vLyoq7nmZkZvvzyS9n+
      3G6309HRwcjICGazmd7eXu7du8fDhw8pLi6mra2NgoIC+vr6CAQCpKWlbTnm+vo6ra2t2O12
      WltbeeONN2hvb2d0dJSZmRkKCgr44osvsNlseDwe9Ho9FouF3Nxcbt68SW5ubtTrBLq7uxkc
      HGRwcJCcnBwcDge3b9+W9d69e5e+vj7sdjslJSV88803FBQU0N/fz/r6Ounp6VHFdTgctLW1
      cf/+fbKysgiFQvJ1ZTAYWFlZkT3LTCYTAwMDpKWlsbq6Sk9PDwUFBVuKNz09zdWrVzEajWi1
      2meeF0NDQ3R1dWG1WiktLeX+/ft0d3czMjLC/v37aWtro7CwEIvFAvA/Pz+8Xi/Xr19nfn6e
      goICPB4PN2/elJ0V3G43TU1NjIyMsG/fPtbW1mhpaWF4ePj16AG43W6Sk5Opr69nbm6OYDCI
      1+vlzp07mM3mqG/UuLg4Dh06JGfpsbExGhsbKSwsxOFw4HQ6qa+vR6lU4vF48Hg8zM7OsrCw
      ELVVRcRHKXLcpaUlJEmirq6O5eVl+aFx/vx5JiYmCIfDrK2t0d3djclkIiEhIaq4ADU1NdTW
      1pKbm4vb7cZqtdLY2EhxcTETExPMzMxQX1+PSqViZWUFj8eD0+lkfn6evLy8qONKkkRraysl
      JSWEw2G6urqoq6ujtraWu3fv0t/fT0NDAzU1NQwODuL1egkEAty6dYujR49GHTcUCnH27FlO
      nz6N3+8nGAxSV1fH6uoqDoeDzMxMGhoamJycJBQK4fV66e3tJScnZ1vbJ969e5dz587xwx/+
      EI1Gw+joKI2NjbzxxhvY7Xamp6dpaGggKSmJpaUlPB4PLpeLmZkZTCZTVDGTk5M5d+4cb7/9
      NhkZGSiVSvx+P3V1dXi9XqamptDr9TQ0NDA9PS3r7evrw2g0kpSUFLXemZkZzp49S2lpKbOz
      swwPD9PY2MiBAwew2WxMTU3R0NBASkoKi4uLrK6u4nK5mJqaorCwMOq4g4OD1NfXU1tbS29v
      L729vZw5c4aGhgZ6enro6+ujvr6ekydPMjAwwNraGn6/n6+++orq6uotx1MoFFRWVso9DJvN
      xvnz5ykoKGBychKbzUZjYyMmk4nJyUnsdjvnz58nLy+PqakpPB4PMzMzLC4ubsn/LBAIUF1d
      Lbfwg8EgNTU1+P1+YDMB19XVce7cOTnZnjt3jtra2tcjAXg8HtLS0lAoFGg0GgKBgNwyLy0t
      jfq42dnZcqtHkiR5L0+9Xs/i4qK8J3BGRgarq6ssLCxw5coVTp06FfVMv0KhQK1W09LSQm5u
      LuFwGJ1Oh0KhQKvVMjMzg8FgkP8uFAoxMjLCyMgIBw4ciForbLYkLl26xMjICLm5ubJeg8HA
      wsLCM3oXFxe5fPnytvTC5o2yb98+UlJSgM0LWqPRkJiYKCdftVpNeno6Ho8HSZK4dOkSBw8e
      3FbCU6lU3Lhxg5aWFtbX10lJSUGhUJCamsrs7KxczwkJCYRCIaxWKwMDA5SXl0cdE2B2dpY7
      d+5w7do1ZmZmiI+PR6lUPlPPer2elZUV3G43//znP7ddz7D5MKiurpbrOKJ3ZmaGjIwMFAoF
      iYmJbGxsMDY2Rl9fHxUVFduKmZeXx+XLl+nu7iY/P/+/6l1eXn4herOzs7l58yYWi4WlpSV8
      Ph9arRa1Wi0PvyQmJpKamsra2hoAV65cobS0NKoEn5OT80RjM6JTr9fjdrufeH4sLy/L6y4M
      BgPLy8u4XC6uXr3K6dOnt6Q7PT0drVb7neXId52UlMTGxgbBYJDk5GS0Wu3rkQA0Gg0rK5t2
      EOvr66hUKsrLy8nPz2dsbOyFxFAqlfLOZm63m7S0NAKBAABLS0ukpKSg1+v5yU9+Qmtr67bG
      EP/1r39x6NAhjhw5QmJiIh6PB9hMdEajkcXFRSRJIhgMolQqKSsrkw31toNWq+UXv/gFx48f
      Z3BwUNa7uLhIenr6M3ozMjL46U9/ui29sJkA5ufnGRkZwWKxoFKpWF9fJxAIyKtig8EgKysr
      8kPr5z//OQMDA/h8vqhiSpJEbW0tdXV1KJVKuScFmwaGWVlZuN1uJEkiEAgQFxfH/v37OXDg
      AAMDA1FrBcjMzOTtt9/mzJkzPHz4UB7/fl49a7Va0tPTeeedd7Zdz4FAAKfTSV5eHmq1Wta7
      srKC0WiUe5t+v5+4uDjMZjPl5eX09/dvS6/D4eCXv/wl9fX19Pf3y+Pubrf7uXpTU1N59913
      t6338OHDnDp1ijfffBODwSBr3tjYADbv6UAggMfjkXs47777LqOjo6yvr29LM/xnkZvb7SY1
      NfWJ54dWq5W/d7fbjU6nw2Aw8OMf/3jbup8mcj/5/X7i4+NRqVT4fD7W1tZejzmApKQkecxU
      q9WSn5/P7Ows3//+97l9+zYmkymq8UuLxcLw8DBOp5OUlBQSEhKwWCw4nU5qamrkh5bf76e8
      vJyJiQmqqqrkVkxmZuaWY66trfHNN98QDAax2WyYzWbGxsaw2+0kJCRQVVVFR0cHExMTGI1G
      jEYjc3Nz1NTU0N3djdFojHp4orm5GYfDgcPhkB1cLRYLs7Oz1NTUsLCwwNDQED6fj4qKChwO
      B1VVVXg8HnnuJRrMZjMlJSUEAgGOHDmC0WikpaUFm83GW2+9RVpaGrdu3cJut3Py5El5LiQ3
      N5fOzk6Ki4u33FL0+Xw0NTUxOTnJ+vo6lZWV2Gw2Hjx4QHx8PIcPH6arq4vx8XEyMzPZt28f
      TqeT48ePy3MQ0Q6LKJVK2tvbGR8fp7KyErVaTVdXF48ePeLEiRO43W7u37+P1+ulsrISh8PB
      oUOH8Pl8zM/PYzQao4o7NDREXl4eGRkZxMfH8+DBAx48eEBcXByHDx+mu7ub8fFxMjIyyMnJ
      YXZ2luPHj9PX17ctvU6nE6vVis1mo7KyksTERLq6upicnOTEiRMsLy8zODjI6uoqVVVVOBwO
      KioqCAQCzM7Osm/fvqjiTk9Pc+/ePUZGRjhx4gTZ2dncuHEDq9VKdXU1mZmZfP3119jtdk6c
      OMHCwgLZ2dkUFhbS3t4u72Hyv2KxWBgZGcHpdKLRaFCr1fT09OB0Ojl27Bh+v5+enh7m5uY4
      duwYPp+Pu3fvymWHw8Hhw4dZWlpidXUVg8HwP8V9+PAhPT09TExMoFAo8Pl8cjnSQLxx44Z8
      PxmNRv79739jtVpfn3UAkZZapJu1kzFUKhVKpTImMR+PG4kTKW9n+OO74vj9ftRqtawvYhEQ
      S72A3EqLdKkjvZ0Xab3xXfW60/UMm3oUCoWsLxAIxLyeY6n3cX1Pl3dKryRJ+Hw+EhIS5LiR
      3kekQbgT19XjRO6n511fT3++kzx9P0XKr00CEAgEAsHWeC3mAAQCgUCwdUQCEAgEgj2KSAAC
      gUCwRxEJQCAQCPYoIgEIBALBHkUkAIFAsKeJvJ4ZMWF73Czu8b953u+jifUijvOiEAlAIBC8
      1Hi9Xj766CN+85vfYLVat/z/d+7c+c7PJEnir3/9K7/73e/w+/0sLS1x4cIF+fNQKMTvf/97
      5ubm+POf/7zl2NPT03zyySdyeW5ujosXL275ODvFa7ESWCAQvL58+OGHlJSU8Ktf/YqEhASW
      l5e5cuUKfr8fo9EoG/R1dXVhMBhob2+nu7ub5eVl3G4377//PomJiZjNZhQKBVarlU8//ZSk
      pCQ8Hg8ff/wxP/jBDygrK8Pn8/Hpp5+ysLCASqXCYDAQFxdHamoqFouFgwcPMjg4SEpKCpcv
      X2ZpaQmTyfTEQq5gMEhvby8OhwONRoNOpyMrK4u2tjY6OjpwuVwcP36cL774gqGhIUpLS5ma
      mqKpqYm1tbVtGStuFdEDEAgELzXj4+OcOXMGjUZDWloaf/jDHzh06BBXr17FarVy7do1wuEw
      V65cwev18pe//AWTycTFixfR6/UkJydTVFSEQqHA6/XywQcf8L3vfY+PPvoIpVKJVqulqKhI
      Xi3s8/koKyvjT3/6Ez6fj8uXLwObD/Y//vGPaDQaPvzwQwoLC7lx4wYOh+OJ8w0EArz//vvc
      vn0bj8fD9evX6ejooL29neLiYgBu3ryJ0+lkdXWVlpYWLly4ELXlxXYQCUAgELzUqNVq2RAx
      YsxXVVVFVVUVjx49eubv8/LyOHbsGBqNhtzcXHQ6HeXl5SgUClZXV8nOzqaiooLc3Fzi4+NJ
      TU3l4MGDsk1CdnY2R44cISMjQ7ZUBujs7MTr9bJ//34cDgcWi4WkpCTZVO9xTCYTv/71r+W9
      DMbGxvjRj35EWVkZSqWS8fFxxsfHcblcKJVKfvazn9Ha2kpbW9sTG7fsNCIBCASCl5p33nmH
      3/72t3zwwQcMDQ2RmprKxYsXaW9vp6KigvHxcT7++GNcLtdz/z/SK5AkiYyMDBYWFvjkk09w
      Op3PGBgqFAocDgcXLlwgLi5OtigHOHnyJFVVVVy6dImamhoCgQBZWVnPNV+MWFxHePPNN/nb
      3/7GP/7xD0KhEG+99RY+nw+DwYBOp2NwcJCysjJ574lYIbyABALBS4/L5WJxcZGCggJ5HD87
      Oxu9Xo/D4SAcDqPRaMjIyGBpaQm9Xs/8/DyZmZksLi7icrnkOQCv14vdbqeoqAiNRsPCwoK8
      SU4oFGJ+fp7V1VVMJhNqtRqXy0V6ejqrq6vodDrm5+fJyspiYmKCuLg4VlZWuH37tnyup06d
      IisrC71ez8bGBisrK6SnpzM+Po5KpUKj0ZCens7MzAxer5f8/HzW19eZmpoiLy8vqh3fokUk
      AIFAINijiCEggUAg2KOIBCAQCAR7lP8DQHnAdSXBhswAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 6' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
